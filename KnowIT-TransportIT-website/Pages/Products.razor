@page "/fares"
@using System.Net.Http.Json
@inject HttpClient Http


<PageTitle>PURCHASE</PageTitle>

<h1>PURCHASE</h1>


<!--AFTERPURCHASE RESPONSE-->
@if (isSubmitted)
{
    <div id="response">Thank you for purchasing! You will get you tickets to your email in a few minutes! An invoice will be sent to your email</div>
    <br>
    <button type="button" class="btn btn-primary btn-lg" @onclick="NewOrder">Make another purchase</button>
    <br>
    <br>
}
else
{
    // PURCHASE FORM
    <p>Buy your ticket below. Only one ticket at a time can be purchased.</p>
    <form>
        <div class="form-group">
            <label for="order">Write fare number to buy:</label><br>
            <input type="number" class="form-control-lg" id="order" @bind="@Order">
        </div>
        <div class="form-group">
            <label for="passanger">Write your passanger number:</label><br>
            <input type="number" class="form-control-lg" id="passanger" @bind="@PassangerNo">
        </div>
        <div class="form-group">
            <label for="password">Your passanger password (not needed):</label><br>
            <input type="password" class="form-control-lg" id="password">
        </div>
        <br>
        <button type="button" class="btn btn-primary btn-lg" @onclick="SubmitForm">Submit purchase</button>
    </form>
    <br />
    //user feedback
    @if (isNot)
    {
        <div id="response" style="color: red;">Please fill in all fields!</div>
        <br />
    }
    @if (isNotRec)
    {
        <div id="response">Thepurchase was not received to our server! Try again later or contact us by telephone or email. Thank you!</div>
    }
}

@code {
    //state model properties and variables
    public string? Order { get; set; }
    public int? PassangerNo { get; set; }
    public int? TicketCost { get; set; }
    public bool? CheckTransport { get; set; }

    //variables for HTML modification
    private bool isSubmitted = false;
    private bool isNot = false;
    private bool isNotRec = false;

    //task to validate order form
    private async Task SubmitForm()
    {
        //check if input fields are null or empty
        if (!string.IsNullOrEmpty(Order) && PassangerNo != 0)
        {

            //DEV  - required by model in API

            //send order form to API
            var data = new { Order, PassangerNo, TicketCost, CheckTransport };

            HttpResponseMessage results;
            try
            {

                results = await Http.PostAsJsonAsync("https://localhost:7297/api/Billing/", data);

                //change value in variable to change page information displayed
                isNot = false;
                isSubmitted = true;

                //Check if the response is successful
                if (!results.IsSuccessStatusCode)
                {
                    isNotRec = true;
                }
            }
            catch (Exception ex)
            {
                // Handle exception
                isNotRec = true;
            }
        }
        else
        {
            //if not filled, display error message
            isNot = true;
        }
    }

    //task to validate order form
    private async Task NewOrder()
    {
        isSubmitted = false;
    }

}

<List />



<style>
    .order {
        background-color: lightgray;
    }

    #response {
        font-size: 1.5em;
    }

    .btn-primary {
        background-color: navy;
    }

    label {
        font-weight: 700;
    }

    .products {
        background-color: lightgray;
    }
</style>